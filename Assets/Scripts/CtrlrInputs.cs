//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.9.0
//     from Assets/Input/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;
using UnityEngine;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Controller Inputs"",
            ""id"": ""ae1c1cd4-a1e8-4c8f-8c7c-0e8af019998e"",
            ""actions"": [
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""fee5b53d-a7c6-41bc-b238-8b449a9311dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Horizontal"",
                    ""type"": ""Value"",
                    ""id"": ""5ed5ffc5-e592-45ed-9288-e1cbf00f4456"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""39c81310-b061-4bd8-a5f8-6a87aea34df2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuickFall"",
                    ""type"": ""Button"",
                    ""id"": ""ab06044a-9e8c-4269-aa75-b326607d07c8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""f580374a-4985-413c-9921-e1a42fa85570"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cursor"",
                    ""type"": ""Value"",
                    ""id"": ""4d9aeef5-7852-47cb-8a0e-8260c05e85f0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Inventory Select"",
                    ""type"": ""Button"",
                    ""id"": ""e58e0fae-2777-4e1a-8d4f-bc45a0e49609"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""2e9a4ff7-d765-476c-b55d-2725ba76959b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InventoryToggle"",
                    ""type"": ""Button"",
                    ""id"": ""4c11a0b7-e021-4dad-8ca6-45fcc02fbcdb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8967c3c6-afc0-4c32-b678-26047af6ec30"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dbb85143-11b3-4821-847c-fcfb0765f6c6"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ba2eb62-eaec-4533-a3a1-b36dd46f21c0"",
                    ""path"": ""<HID::Core (Plus) Wired Controller>/button3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis Keyboard"",
                    ""id"": ""da61ef69-231f-4895-9e27-281eaea0dea3"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""e6b42c16-f852-4d17-97bf-e951c4509f02"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""8fb9ae26-fc84-4603-a568-63c8bc77668e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2efa7d25-d50e-488b-87d7-c0e00d5ff37a"",
                    ""path"": ""<Gamepad>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": ""Invert"",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e03d05f8-6032-4e87-9035-aaad0d0ac5e1"",
                    ""path"": ""<HID::Core (Plus) Wired Controller>/stick/x"",
                    ""interactions"": """",
                    ""processors"": ""Invert"",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e4bfe0a6-0ae1-4a44-839d-35f2cc34dc96"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83901367-d31f-49f7-935e-ad690b170c0b"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61e1f5ac-c2c8-4fe1-9b5c-0698cf91d0d7"",
                    ""path"": ""<HID::Core (Plus) Wired Controller>/button5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a3a4a616-7e08-4f1b-a859-7371bcb2e511"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QuickFall"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9939e18c-ba1a-4afa-a132-7ad1b55eaf15"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QuickFall"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd56450f-fc51-433f-9f5c-2b6b1bd59857"",
                    ""path"": ""<HID::Core (Plus) Wired Controller>/button11"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QuickFall"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a3843be6-b456-438b-a4cf-5b4af6be2404"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""62c4b82a-4187-4bb6-9eaf-7270d6e02b04"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c5d4f7f-ef75-410a-b8ee-254f14d4c9d2"",
                    ""path"": ""<HID::Core (Plus) Wired Controller>/button6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Arrow Keys"",
                    ""id"": ""d947035f-1050-4b04-beaf-ea88cad213c5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""2a8be44c-c0e2-4b17-b597-4f2758d9c12d"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""26563001-1a05-45d8-aa03-e6e0bc4f4555"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""da1255d0-57c9-448a-92d2-7959bd88cf9f"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""4e0d84f0-3e94-419a-9745-5bb371efdd3f"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Core C Stick"",
                    ""id"": ""9c88e698-2fe7-4868-9d9a-4e1f7d06e042"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a7d43e90-27de-4c8f-9317-37881f4873c3"",
                    ""path"": ""<HID::Core (Plus) Wired Controller>/rz"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b41f0273-9074-4fc2-8039-dd6377ad04e1"",
                    ""path"": ""<HID::Core (Plus) Wired Controller>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3e5769a2-070b-498a-8e82-ab18a36408e6"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""6ceaf333-47f1-4cff-a969-4917ebd5c962"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory Select"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""2442b393-cdb8-4e1e-883d-b7f534e54234"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""2d3438c2-9712-4d74-aae0-36dbc46a128a"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Core Controller"",
                    ""id"": ""a4b3ddc8-71c5-4852-a00e-7f3af1aab986"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory Select"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""7a64f2fe-a90b-4de1-a743-5f925f780646"",
                    ""path"": ""<HID::Core (Plus) Wired Controller>/button7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""8d8cd4fd-caaa-4ced-8a61-290f4014caf4"",
                    ""path"": ""<HID::Core (Plus) Wired Controller>/button8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""42776827-a3c1-4501-b644-17187dd0ac6e"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c949c18-3749-486d-a5d7-32365b5d32b4"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e55914e6-913e-4aab-bdbf-fbdb02886f1f"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InventoryToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c9ba8902-0dd8-4693-8239-560504a77c1c"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InventoryToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Controller Inputs
        m_ControllerInputs = asset.FindActionMap("Controller Inputs", throwIfNotFound: true);
        m_ControllerInputs_Jump = m_ControllerInputs.FindAction("Jump", throwIfNotFound: true);
        m_ControllerInputs_Horizontal = m_ControllerInputs.FindAction("Horizontal", throwIfNotFound: true);
        m_ControllerInputs_Sprint = m_ControllerInputs.FindAction("Sprint", throwIfNotFound: true);
        m_ControllerInputs_QuickFall = m_ControllerInputs.FindAction("QuickFall", throwIfNotFound: true);
        m_ControllerInputs_Attack = m_ControllerInputs.FindAction("Attack", throwIfNotFound: true);
        m_ControllerInputs_Cursor = m_ControllerInputs.FindAction("Cursor", throwIfNotFound: true);
        m_ControllerInputs_InventorySelect = m_ControllerInputs.FindAction("Inventory Select", throwIfNotFound: true);
        m_ControllerInputs_Crouch = m_ControllerInputs.FindAction("Crouch", throwIfNotFound: true);
        m_ControllerInputs_InventoryToggle = m_ControllerInputs.FindAction("InventoryToggle", throwIfNotFound: true);
    }

    ~@PlayerControls()
    {
        Debug.Assert(!m_ControllerInputs.enabled, "This will cause a leak and performance issues, PlayerControls.ControllerInputs.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Controller Inputs
    private readonly InputActionMap m_ControllerInputs;
    private List<IControllerInputsActions> m_ControllerInputsActionsCallbackInterfaces = new List<IControllerInputsActions>();
    private readonly InputAction m_ControllerInputs_Jump;
    private readonly InputAction m_ControllerInputs_Horizontal;
    private readonly InputAction m_ControllerInputs_Sprint;
    private readonly InputAction m_ControllerInputs_QuickFall;
    private readonly InputAction m_ControllerInputs_Attack;
    private readonly InputAction m_ControllerInputs_Cursor;
    private readonly InputAction m_ControllerInputs_InventorySelect;
    private readonly InputAction m_ControllerInputs_Crouch;
    private readonly InputAction m_ControllerInputs_InventoryToggle;
    public struct ControllerInputsActions
    {
        private @PlayerControls m_Wrapper;
        public ControllerInputsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jump => m_Wrapper.m_ControllerInputs_Jump;
        public InputAction @Horizontal => m_Wrapper.m_ControllerInputs_Horizontal;
        public InputAction @Sprint => m_Wrapper.m_ControllerInputs_Sprint;
        public InputAction @QuickFall => m_Wrapper.m_ControllerInputs_QuickFall;
        public InputAction @Attack => m_Wrapper.m_ControllerInputs_Attack;
        public InputAction @Cursor => m_Wrapper.m_ControllerInputs_Cursor;
        public InputAction @InventorySelect => m_Wrapper.m_ControllerInputs_InventorySelect;
        public InputAction @Crouch => m_Wrapper.m_ControllerInputs_Crouch;
        public InputAction @InventoryToggle => m_Wrapper.m_ControllerInputs_InventoryToggle;
        public InputActionMap Get() { return m_Wrapper.m_ControllerInputs; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ControllerInputsActions set) { return set.Get(); }
        public void AddCallbacks(IControllerInputsActions instance)
        {
            if (instance == null || m_Wrapper.m_ControllerInputsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ControllerInputsActionsCallbackInterfaces.Add(instance);
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Horizontal.started += instance.OnHorizontal;
            @Horizontal.performed += instance.OnHorizontal;
            @Horizontal.canceled += instance.OnHorizontal;
            @Sprint.started += instance.OnSprint;
            @Sprint.performed += instance.OnSprint;
            @Sprint.canceled += instance.OnSprint;
            @QuickFall.started += instance.OnQuickFall;
            @QuickFall.performed += instance.OnQuickFall;
            @QuickFall.canceled += instance.OnQuickFall;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @Cursor.started += instance.OnCursor;
            @Cursor.performed += instance.OnCursor;
            @Cursor.canceled += instance.OnCursor;
            @InventorySelect.started += instance.OnInventorySelect;
            @InventorySelect.performed += instance.OnInventorySelect;
            @InventorySelect.canceled += instance.OnInventorySelect;
            @Crouch.started += instance.OnCrouch;
            @Crouch.performed += instance.OnCrouch;
            @Crouch.canceled += instance.OnCrouch;
            @InventoryToggle.started += instance.OnInventoryToggle;
            @InventoryToggle.performed += instance.OnInventoryToggle;
            @InventoryToggle.canceled += instance.OnInventoryToggle;
        }

        private void UnregisterCallbacks(IControllerInputsActions instance)
        {
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Horizontal.started -= instance.OnHorizontal;
            @Horizontal.performed -= instance.OnHorizontal;
            @Horizontal.canceled -= instance.OnHorizontal;
            @Sprint.started -= instance.OnSprint;
            @Sprint.performed -= instance.OnSprint;
            @Sprint.canceled -= instance.OnSprint;
            @QuickFall.started -= instance.OnQuickFall;
            @QuickFall.performed -= instance.OnQuickFall;
            @QuickFall.canceled -= instance.OnQuickFall;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @Cursor.started -= instance.OnCursor;
            @Cursor.performed -= instance.OnCursor;
            @Cursor.canceled -= instance.OnCursor;
            @InventorySelect.started -= instance.OnInventorySelect;
            @InventorySelect.performed -= instance.OnInventorySelect;
            @InventorySelect.canceled -= instance.OnInventorySelect;
            @Crouch.started -= instance.OnCrouch;
            @Crouch.performed -= instance.OnCrouch;
            @Crouch.canceled -= instance.OnCrouch;
            @InventoryToggle.started -= instance.OnInventoryToggle;
            @InventoryToggle.performed -= instance.OnInventoryToggle;
            @InventoryToggle.canceled -= instance.OnInventoryToggle;
        }

        public void RemoveCallbacks(IControllerInputsActions instance)
        {
            if (m_Wrapper.m_ControllerInputsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IControllerInputsActions instance)
        {
            foreach (var item in m_Wrapper.m_ControllerInputsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ControllerInputsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ControllerInputsActions @ControllerInputs => new ControllerInputsActions(this);
    public interface IControllerInputsActions
    {
        void OnJump(InputAction.CallbackContext context);
        void OnHorizontal(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnQuickFall(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnCursor(InputAction.CallbackContext context);
        void OnInventorySelect(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnInventoryToggle(InputAction.CallbackContext context);
    }
}
